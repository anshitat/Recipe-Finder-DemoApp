{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","ingredientList","updateIngredientList","loading","setLoading","inputRef","useRef","searchForRecipe","query","url","fetch","then","res","json","data","hits","console","log","catch","err","useEffect","className","ref","placeholder","onClick","current","value","map","recipe","label","image","ingredientLines","src","step","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAmEeA,MAhEf,WAAgB,IAAD,EACkCC,mBAAS,IAD3C,mBACNC,EADM,KACUC,EADV,OAEkBF,oBAAS,GAF3B,mBAENG,EAFM,KAEGC,EAFH,KAGPC,EAAWC,iBAAO,MAUlBC,EAAkB,SAACC,GACvBJ,GAAW,GACX,IAAIK,EAAG,0CAAqCD,EAArC,mBAVM,WAUN,oBAXO,oCAYdE,MAAMD,GACHE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLZ,EAAqBY,EAAKC,MAC1BX,GAAW,GACXY,QAAQC,IAAIH,MAEbI,OAAM,SAACC,GACJH,QAAQC,IAAIE,GACZf,GAAW,OAQnB,OAJAgB,qBAAW,WACTb,EAAgB,aAChB,IAGA,qBAAKc,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,sBAAKA,UAAU,eAAf,UACE,uBAAOC,IAAKjB,EAAWkB,YAAY,sBACnC,wBAAQC,QA/BF,WAEZjB,EAAgBF,EAASoB,QAAQC,OACjCrB,EAASoB,QAAQC,MAAO,IA4BlB,uBAEDvB,GAAW,2CACZ,qBAAKkB,UAAU,UAAf,SACGpB,EAAe0B,KAAK,YAAc,IAAZC,EAAW,EAAXA,OACdC,EAAiCD,EAAjCC,MAAOC,EAA0BF,EAA1BE,MAAOC,EAAmBH,EAAnBG,gBACrB,OACE,sBAAiBV,UAAU,aAA3B,UACE,+BAAOQ,IACP,qBAAKG,IAAKF,IACV,qBAAKT,UAAU,QAAf,SACGU,EAAgBJ,KAAK,SAACM,EAAMC,GAC3B,OACE,4BAAgBD,GAARC,UANNL,cCpCTM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.81a9c8c7.chunk.js","sourcesContent":["import './App.css';\nimport { useEffect, useState , useRef} from 'react';\n\nfunction App() {\n  const [ingredientList, updateIngredientList] = useState([]);\n  const [loading, setLoading]  = useState(false);\n  const inputRef = useRef(null);\n  const API_KEY = '2fb2dd7b6f636b493219402ac0ac5928'\n  const APP_ID = '715123f9'\n\n  const search= () =>{\n    // console.log('input ref: ', inputRef)\n    searchForRecipe(inputRef.current.value);\n    inputRef.current.value =''\n  }\n\n  const searchForRecipe = (query) =>{\n    setLoading(true)\n    let url =`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${API_KEY}`\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) =>{\n        updateIngredientList(data.hits);\n        setLoading(false)\n        console.log(data)\n      })\n      .catch((err)=>{\n          console.log(err)\n          setLoading(false)\n      })\n  }\n\n  useEffect( ()=>{\n    searchForRecipe('chicken');\n  },[])\n\n  return (\n    <div className=\"App\">\n      <header className='App-header'>\n        <div className='inputWrapper'>\n          <input ref={inputRef}  placeholder='Search for recipe'/>\n          <button onClick={search}>Search</button>\n        </div>\n        {loading && <p>Loading...</p>}\n        <div className='wrapper'>\n          {ingredientList.map( ({recipe}) =>{\n            const {label, image, ingredientLines} = recipe\n            return(\n              <div key={label} className='ingredient'>\n                <span>{label}</span>\n                <img src={image}/>\n                <div className='steps'>\n                  {ingredientLines.map( (step, index)=>{\n                    return(\n                      <p key={index}>{step}</p>\n                    )\n                  })}\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}